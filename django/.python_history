from spatialdata.models import Zipcode
with open('client/export.geojson', 'r', encoding='utf-8') as f:
	data = json.load(f)
import json
with open('client/export.geojson', 'r', encoding='utf-8') as f:
	data = json.load(f)
data
new_data = data[:10]
features = data['features'][:10]
features
for feature in features:
	points = feature['geometry']['coordinates']
from geoJson import create_home
create_home()
from geoJson import create_home
create_home()
exit()
from geoJson import create_home
create_home()
from geoJson import create_home
create_home()
exit()
from geoJson import create_home
create_home()
exit()
from geoJson import create_home
create_home()
exit()
from geoJson import create_home
create_home()
exit()
from geoJson import create_home
exit()
from geoJson import create_home
create_home()
exit()
from geoJson import create_home
create_home()
exit()
from geoJson import create_home
create_home()
exit()
from geoJson import create_home
create_home()
exit()
from geoJson import create_home
from spatialdata.models import Zipcode
pnt = Zipcode.objects.first()
pnt
pnt.coord
type(pnt)
from geoJson import create_home
create_home()
exit()
from geoJson import create_home
create_home()
exit()
from geoJson import create_home
create_home()
exit()
from geoJson import create_home
create_home()
exit()
from geoJson import create_home
create_home()
exit()
from geoJson import create_home
create_home()
exit()
from geoJson import create_home
create_home()
exit()
from geoJson import create_home
create_home()
from spatialdata.models import Zipcode
pnt = Zipcode.objects.first()
png
pnt
pnt.json
pnt.home.json
f_pnt = Zipcode.objects.filter()
f_png
f_pnt
f_pnt.json
dir(f_pnt)
f_pnt.value_list
f_pnt.value_list()
exit()
from geoJson import create_home
create_home()
exit()
pnt = GEOSGeometry('POINT(66.9743581 39.6548186)', srid=4326)
from django.contrib.gis.geos import GEOSGeometry
pnt = GEOSGeometry('POINT(66.9743581 39.6548186)', srid=4326)
pnt
from spatialdata.models import Zipcode
f = Zipcode.objects.filter(home__dictance_lt=(pnt, D(km=5)))
from django.contrib.gis.measure import D
f = Zipcode.objects.filter(home__dictance_lt=(pnt, D(km=5)))
f = Zipcode.objects.filter(home__distance_lt=(pnt, D(km=5)))
f
exit()
